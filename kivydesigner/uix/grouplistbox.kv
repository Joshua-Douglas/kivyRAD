# light grey/black
#:set entry_background_color (0.15,0.15,0.15,1)
# light blue
#:set selection_color (0.196, 0.592, 0.992, 0.15)

<ListBoxGroup>:
    orientation: 'horizontal'
    size_hint_y: None
    spacing: '8dp'
    height: '48dp' if dp(1) > 1 else '24dp'
    odd_color: entry_background_color
    even_color: entry_background_color
    no_selection: True
    canvas.before:
        Color:
            rgba: 1, 1, 1, int(not self.is_leaf)
        Rectangle:
            source: 'atlas://data/images/defaulttheme/tree_%s' % ('opened' if self.is_open else 'closed')
            size: self.height / (3. if dp(1) > 1 else 2.), self.height / (3. if dp(1) > 1 else 2.)
            pos: self.x - dp(20), int(self.center_y - (self.height / (3. if dp(1) > 1 else 2.)) * .5)
    canvas.after:
        Color:
            rgba: 0.196, 0.592, 0.992, int(self.is_focused)
        Line:
            # Draw a darker blue border around selected entries
            rectangle: [self.parent.x+dp(1), self.y+dp(1), self.parent.width-dp(2), self.height-dp(2)] if self.parent else [0,0,0,0]

<ListBoxEntry>:
    orientation: 'horizontal'
    size_hint_y: None
    spacing: '8dp'
    height: '48dp' if dp(1) > 1 else '24dp'
    odd_color: entry_background_color
    even_color: entry_background_color
    color_selected: 0.196, 0.592, 0.992, 0.15
    canvas.before:
        Color:
            # Draw a light blue rectangle if the entry is selected
            # Disable the selection rectangle if editing the entry
            # Since the TextInput provides text selection highlighting
            rgba: self.color_selected if self.is_selected else entry_background_color
        Rectangle:
            pos: [self.parent.x, self.y] if self.parent else [0, 0]
            size: [self.parent.width, self.height] if self.parent else [1, 1]
    canvas.after:
        Color:
            rgba: 0.196, 0.592, 0.992, int(self.is_selected and self.is_focused)
        Line:
            # Draw a darker blue border around selected entries
            rectangle: [self.parent.x+dp(1), self.y+dp(1), self.parent.width-dp(2), self.height-dp(2)] if self.parent else [0,0,0,0]
    
<GroupListBox>:
    canvas.before:
        Color: # background color
            rgba: entry_background_color
        Rectangle:
            pos: [self.x, self.y]
            size: [self.width, self.height]
    treeview: treeview
    layout: scatter_layout
    orientation: "vertical"
    padding: dp(5), dp(0), dp(5), dp(5) #l,t,r,b
    Label:
        id: title_label
        text: root.title
        size: self.texture_size
        text_size: root.width, None
        font_size: dp(16)
        size_hint_y: None
        padding_x: dp(10)
        padding_y: dp(5)
    ScrollView:
        id: scrollview
        do_scroll_x: False
        width: root.width 
        height: root.height - title_label.height
        Scatter:
            id: scatter_layout
            do_rotation: False
            do_scale: False
            do_translation: False
            size: treeview.size
            size_hint_y: None
            ListBoxTree:
                id: treeview
                hide_root: True
                size_hint_y: None
                width: scrollview.width
                height: self.minimum_height

